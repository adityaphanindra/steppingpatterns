PROJECT(VRPN_CLIENT_PHASESPACE)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
SET(CMAKE_INSTALL_RPATH ${CMAKE_INSTALL_RPATH} ${CMAKE_INSTALL_PREFIX}/lib ${CMAKE_INSTALL_PREFIX}/bin)
IF(UNIX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=gnu++0x")
	SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin )
	SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )
	SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )
ELSEIF(MSVC)
	FOREACH( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
    	STRING( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
    	SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/../bin )
    	SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/../lib )
    	SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/../lib )
	ENDFOREACH( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )
ENDIF()

IF(UNIX)
	FIND_PACKAGE(Qt4 COMPONENTS QtGui QtCore REQUIRED)
	SET(QT_LIBRARIES QtGui QtCore QtMultimedia)
ELSEIF(MSVC)
	INCLUDE(Qt4Macros)
	SET(QT_ROOT_DIR "C:/Qt/4.8.5-VS2012" CACHE FILEPATH "Qt Root Directory")
	SET(QT_INCLUDE_DIR ${QT_ROOT_DIR}/include ${QT_ROOT_DIR}/include/QtGui ${QT_ROOT_DIR}/include/QtCore ${QT_ROOT_DIR}/include/QtMultimedia)
	SET(QT_LIBRARY_DIR ${QT_ROOT_DIR}/lib)
	SET(QT_MOC_EXECUTABLE ${QT_ROOT_DIR}/bin/moc)
	SET(QT_RCC_EXECUTABLE ${QT_ROOT_DIR}/bin/rcc)
	SET(QT_UIC_EXECUTABLE ${QT_ROOT_DIR}/bin/uic)
	SET(QT_LIBRARIES QtGui4 QtCore4 QtMultimedia4)
ENDIF()


IF(UNIX)
	SET(VRPN_ROOT_DIR "C:/Phani/VRPN_Server/VRPN-src" CACHE FILEPATH "Directory of VRPN Source")
	SET(VRPN_INCLUDE_DIR ${VRPN_ROOT_DIR})
	SET(VRPN_LIBRARY_DIR ${VRPN_ROOT_DIR}/build)
	SET(VRPN_LIBRARIES vrpn vrpnserver owlsock pthread)
ELSEIF(MSVC)
	SET(VRPN_ROOT_DIR "C:/vrpn_07_29/vrpn" CACHE FILEPATH "Directory of VRPN Source")
	SET(VRPN_INCLUDE_DIR ${VRPN_ROOT_DIR})
	SET(VRPN_LIBRARY_DIR ${VRPN_ROOT_DIR}/build)
	SET(VRPN_LIBRARIES vrpn owlsock)
ENDIF()

SET(BOOST_ROOT_DIR "C:/Boost/boost_1_54_0" CACHE FILEPATH "Directory of Boost")
SET(BOOST_INCLUDE_DIR ${BOOST_ROOT_DIR})

SET(C3DTOOLS_LIBRARIES uuc3dlib)
SET(C3DTOOLS_LIBRARY_DIR "C:/Users/phani/Documents/EPFL/Thesis/Analysis/lib" CACHE FILEPATH "Directory of C3DTOOLS library")

SET(C3DWRITER_SRC src/C3DWriter.cpp)
SET(MARKER_SRC src/MarkerData.cpp src/Human.cpp)
SET(EXPERIMENTUI_INC include/ExperimentUI.h)
SET(CALIBRATIONUI_INC include/CalibrationUI.h)

QT4_WRAP_CPP(CALIBRATION_MOC ${CALIBRATIONUI_INC})
QT4_WRAP_CPP(EXPERIMENT_MOC ${EXPERIMENTUI_INC})

INCLUDE_DIRECTORIES(. include include/uuc3dlib ${VRPN_INCLUDE_DIR} ${QT_INCLUDES} ${QT_INCLUDE_DIR} ${BOOST_INCLUDE_DIR})
LINK_DIRECTORIES(${C3DTOOLS_LIBRARY_DIR} ${VRPN_LIBRARY_DIR} ${QT_LIBRARY_DIR})

ADD_EXECUTABLE(VRPNPhaseSpaceClient src/VRPNClientTwoShoes.cpp ${MARKER_SRC})
TARGET_LINK_LIBRARIES(VRPNPhaseSpaceClient ${VRPN_LIBRARIES})

ADD_EXECUTABLE(CalibrationTool src/Calibration.cpp src/CalibrationUI.cpp ${MARKER_SRC} ${CALIBRATION_MOC})
TARGET_LINK_LIBRARIES(CalibrationTool ${VRPN_LIBRARIES} ${QT_LIBRARIES})

ADD_EXECUTABLE(ExperimentTool src/Experiment.cpp src/ExperimentUI.cpp ${MARKER_SRC} ${EXPERIMENT_MOC} ${C3DWRITER_SRC})
TARGET_LINK_LIBRARIES(ExperimentTool ${VRPN_LIBRARIES} ${QT_LIBRARIES} ${C3DTOOLS_LIBRARIES})

ADD_EXECUTABLE(ProcessData src/FindSteps.cpp ${MARKER_SRC} ${C3DWRITER_SRC})
TARGET_LINK_LIBRARIES(ProcessData ${VRPN_LIBRARIES} ${QT_LIBRARIES} ${C3DTOOLS_LIBRARIES})