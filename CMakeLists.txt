PROJECT(VisualisationTool)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
SET(CMAKE_INSTALL_RPATH ${CMAKE_INSTALL_RPATH} ${CMAKE_INSTALL_PREFIX}/lib ${CMAKE_INSTALL_PREFIX}/bin)
IF(UNIX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=gnu++0x")
	SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../bin )
	SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../lib )
	SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../lib )
ELSEIF(MSVC)
	FOREACH( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
    	STRING( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
    	SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/../bin )
    	SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/../lib )
    	SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/../lib )
	ENDFOREACH( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )
ENDIF()

IF(UNIX)
	FIND_PACKAGE(Qt4 COMPONENTS QtGui QtCore REQUIRED)
	SET(QT_LIBRARIES QtGui QtCore)
	SET(QT_INCLUDE_DIRS ${QT_INCLUDE_DIR} ${QT_INCLUDE_DIR}/QtCore ${QT_INCLUDE_DIR}/QtGui)
ELSEIF(MSVC)
	INCLUDE(Qt4Macros)
	SET(QT_ROOT_DIR "C:/Qt/4.8.5-VS2012" CACHE FILEPATH "Qt Root Directory")
	SET(QT_INCLUDE_DIRS ${QT_ROOT_DIR}/include ${QT_ROOT_DIR}/include/QtGui ${QT_ROOT_DIR}/include/QtCore)
	SET(QT_LIBRARY_DIRS ${QT_ROOT_DIR}/lib)
	SET(QT_MOC_EXECUTABLE ${QT_ROOT_DIR}/bin/moc)
	SET(QT_RCC_EXECUTABLE ${QT_ROOT_DIR}/bin/rcc)
	SET(QT_UIC_EXECUTABLE ${QT_ROOT_DIR}/bin/uic)
	SET(QT_LIBRARIES QtGui4 QtCore4)
ENDIF()

IF(UNIX)
	SET(DEPENDENCY_DIR "/home/phani/Documents/EPFL/Thesis/SteppingPatterns/dep"  CACHE FILEPATH "Dependency Directory")
ELSEIF(MSVC)
	SET(DEPENDENCY_DIR "C:/Users/phani/Documents/EPFL/Thesis/SteppingPatterns/dep"  CACHE FILEPATH "Dependency Directory")
ENDIF()

IF(UNIX)
	FIND_PACKAGE(Boost COMPONENTS REQUIRED)
ELSEIF(MSVC)
	SET(BOOST_DIR "C:/boost_1_55_0"  CACHE FILEPATH "Boost Directory")
	SET(BOOST_INCLUDE_DIRS ${BOOST_DIR})
	SET(BOOST_LIBRARY_DIRS ${BOOST_DIR}/lib)
ENDIF()

IF(UNIX)
	FIND_PACKAGE(GLUT REQUIRED)
	INCLUDE_DIRECTORIES(${GLUT_INCLUDE})
	LINK_DIRECTORIES(${GLUT_LIBRARY_DIRS})
	ADD_DEFINITIONS(${GLUT_DEFINITIONS})
	IF(NOT GLUT_FOUND)
    	MESSAGE(ERROR "GLUT not found!")
	ENDIF(NOT GLUT_FOUND)
ELSEIF(MSVC)
	SET(GLUT_INCLUDE ${DEPENDENCY_DIR}/glut)
	SET(GLUT_LIBRARY_DIRS ${DEPENDENCY_DIR}/glut)
	SET(GLUT_LIBRARIES glut)
ENDIF()

SET(QCUSTOMPLOT_INCLUDE ${DEPENDENCY_DIR}/qcustomplot)
SET(QCUSTOMPLOT_SRC ${DEPENDENCY_DIR}/qcustomplot/qcustomplot.cpp)

SET(UUC3DLIB_DIR ${DEPENDENCY_DIR}/uuc3dlib)
SET(UUC3DLIB_INCLUDE ${UUC3DLIB_DIR}/include)
SET(UUC3DLIB_LIBRARY_DIR ${UUC3DLIB_DIR}/lib)
SET(UUC3DLIB_LIBRARIES uuc3d)

SET(MISC_SRC src/StringFunc.cpp src/Tools.cpp)
SET(UI_SRC src/MainUI.cpp)
SET(CODE_SRC src/Subject.cpp src/Sequence.cpp src/Targets.cpp)
SET(C3DCODE_SRC src/C3DReader.cpp src/MarkerData.cpp)

QT4_WRAP_CPP(UI_MOC include/MainUI.h)
QT4_WRAP_CPP(QCUSTOMPLOT_MOC ${QCUSTOMPLOT_INCLUDE}/qcustomplot.h)

INCLUDE_DIRECTORIES(. include ${QCUSTOMPLOT_INCLUDE} ${GLUT_INCLUDE} ${QT_INCLUDE_DIRS} ${UUC3DLIB_INCLUDE} ${BOOST_INCLUDE_DIRS})
LINK_DIRECTORIES(${GLUT_LIBRARY_DIRS} ${QT_LIBRARY_DIRS} ${UUC3DLIB_LIBRARY_DIR} ${BOOST_LIBRARY_DIRS})

ADD_EXECUTABLE(VisualisationTool src/main.cpp ${MISC_SRC} ${UI_SRC} ${QCUSTOMPLOT_SRC} ${CODE_SRC} ${C3DCODE_SRC} ${UI_MOC} ${QCUSTOMPLOT_MOC})
TARGET_LINK_LIBRARIES(VisualisationTool ${GLUT_LIBRARIES} ${QT_LIBRARIES} ${UUC3DLIB_LIBRARIES} ${BOOST_LIBRARIES})

ADD_EXECUTABLE(TestTool src/test.cpp ${MISC_SRC} ${UI_SRC} ${QCUSTOMPLOT_SRC} ${CODE_SRC} ${C3DCODE_SRC} ${UI_MOC} ${QCUSTOMPLOT_MOC})
TARGET_LINK_LIBRARIES(TestTool ${GLUT_LIBRARIES} ${QT_LIBRARIES} ${UUC3DLIB_LIBRARIES} ${BOOST_LIBRARIES})